type DonationData = record {
  timestamp : nat64;
  amount : nat64;
  donor : principal;
};
type File = record {
  name : text;
  file_type : text;
  total_size : nat64;
  chunks : vec FileChunk;
};
type FileChunk = record { data : blob; index : nat64 };
type FileMetadata = record {
  name : text;
  file_type : text;
  total_size : nat64;
};
type FundraiseData = record {
  goal : nat64;
  description : text;
  campaign_title : text;
  category : text;
  location : text;
};
type FundraiseDataWithId = record {
  id : principal;
  fundraise_data : FundraiseData;
};
type Result = variant { Ok : text; Err : text };
type Result_1 = variant { Ok : vec FundraiseDataWithId; Err : text };
type Result_2 = variant { Ok : vec DonationData; Err : text };
type Result_3 = variant { Ok : nat64; Err : text };
type Result_4 = variant { Ok : blob; Err : text };
type Result_5 = variant { Ok : vec FileMetadata; Err : text };
type Result_6 = variant { Ok : FundraiseData; Err : text };
type Result_7 = variant { Ok : nat64; Err : text };
type Result_8 = variant { Ok : vec record { text; File }; Err : text };
service : {
  check_file_exists : (text) -> (bool) query;
  create_fundraise : (FundraiseData) -> (Result);
  donate : (principal, nat64) -> (Result);
  get_bulk_fundraise_data : (nat64) -> (Result_1) query;
  get_donation_list : (principal) -> (Result_2) query;
  get_donation_list_len : (principal) -> (Result_3) query;
  get_file_chunk : (text, nat64) -> (Result_4) query;
  get_file_type : (text) -> (Result) query;
  get_files : () -> (Result_5) query;
  get_fundraise_data_by_principal_id : (principal) -> (Result_6) query;
  get_total_chunks : (text) -> (Result_7) query;
  get_user_files : (principal) -> (Result_8) query;
  upload_file : (text, blob, nat64, text) -> (Result);
}
